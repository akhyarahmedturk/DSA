#include<bits/stdc++.h>
using namespace std;

int main() {
    int t ;
    cin >> t ;
    unordered_map<string, string> hash ;
    hash[ "A01"  ] = "Competition" ;
    hash[ "A02"  ] = "Competition" ;
    hash[ "A03"  ] = "Competition" ;
    hash[ "A04"  ] = "Competition" ;
    hash[ "B01" ] = "Entertainment" ;
    hash[ "B02" ] = "Entertainment" ;
    hash[ "B03" ] = "Entertainment" ;
    hash[ "B04" ] = "Entertainment" ;
    hash[ "C01" ] = "Social Gatherings" ;
    hash[ "C02" ] = "Social Gatherings" ;
    hash[ "C03" ] = "Social Gatherings" ;
    hash[ "C04" ] = "Social Gatherings" ;
    hash[ "D01" ] = "Dinners" ;
    hash[ "D02" ] = "Dinners" ;
    hash[ "D03" ] = "Dinners" ;
    hash[ "D04" ] = "Dinners" ;
    hash[ "E01" ] = "Processions" ;
    hash[ "E02" ] = "Processions" ;
    hash[ "E03" ] = "Processions" ;
    hash[ "E04" ] = "Processions" ;
    hash[ "F01" ] = "Training Workshops" ;
    hash[ "F02" ] = "Training Workshops" ;
    hash[ "F03" ] = "Training Workshops" ;
    hash[ "F04" ] = "Training Workshops" ;
    hash[ "G01" ] = "Exams" ;
    hash[ "G02" ] = "Exams" ;
    hash[ "G03" ] = "Exams" ;
    while( t-- ) {
        cin.ignore() ;
        string str ;
        getline(cin, str) ;
        vector<string> cur ;
        unordered_map<string, int> index ;
        string temp = "" ;
        int start=0;
        pair<int, int> res={0   ,0};  
        for( int i = 0 ; i < str.size() ; i++ ) {
            // cout << i << endl;
            if( temp.empty() || isalpha( str[i] ) ) {
                temp.clear() ;
                temp += str[i] ;
            }
            else if( isalpha( temp.back() ) && str[i] == '0 ') {
                temp += str[i] ;
            } 
            else if( temp.back() == '0' && ( isdigit( str[i] ) && str[i] >= '1' && str[i] <= '4' ) ) {
                temp += str[i] ;
            }
            // else {
            //     cout << temp
            // }
            if( temp.size() == 3 ) {
                if( hash.find( temp )== hash.end() )
                    cur.push_back( temp ) ;
                else {
                    int j = index[temp] ;
                    for(int i=start;i<=j;i++){
                        index.erase(cur[i]);
                    }
                }
            }
            if(res.second-res.first <i-start ){
                res={start,i};
            }
        }

        cout << res.second - res.first << " " ;
        unordered_map<string, int> mp ;
        for( int i = res.first ; i <= res.second ; i++ ) {
            cout << cur[i] << " " ;
            mp[ cur[i] ]++ ;
        }
        cout << endl ;
    }
    return 0 ;
}

// team_233
// tgddwxr3eucp